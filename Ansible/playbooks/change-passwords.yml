---
- hosts: linux
  become: yes
  gather_facts: no
  vars:
    generator: "{{ lookup('password', '/dev/null length=15 chars=ascii_lowercase,ascii_uppercase,digits') }}"
  tasks:
  - name: Get information for all service users (ID < 1000)
    ansible.builtin.shell: "getent passwd | grep -vE 'x:[1-9][0-9]{3,}'"
    register: users
    tags: linux
  - name: Filter user info for usernames
    ansible.builtin.set_fact:
      usernames: "{{ users.stdout_lines | map('split', ':') | map(attribute=0) | list }}"
    tags: linux
  - name: Remove root user from Debian list (sudo not supported so we have to login as root)
    ansible.builtin.set_fact:
      usernames: "{{ usernames | reject('search', 'root') }}"
    when: ansible_distribution == "Debian"
    tags: linux
  - name: Disable passwords for all service users
    ansible.builtin.user:
      name: "{{ item }}"
      password: "*"
    loop: "{{ usernames }}"
    tags: linux
  - name: Get information for all non-service users (ID >= 1000)
    ansible.builtin.shell: "getent passwd | grep -E 'x:[1-9][0-9]{3,}'"
    register: users
    tags: linux
  - name: Filter user info for usernames
    ansible.builtin.set_fact:
      usernames: "{{ users.stdout_lines | map('split', ':') | map(attribute=0) | list }}"
    tags: linux
  - name: Remove Ansible, splunk, and nobody users from the list
    ansible.builtin.set_fact:
      usernames: "{{ usernames |
        reject('search', ansible_user) |
        reject('search', 'splunk') |
        reject('match', 'nobody*') }}"
    tags: linux
  - name: Change random passwords for non-service users
    include_tasks: generate-password-linux.yml
    loop: "{{ usernames }}"
    tags: linux

- hosts: windows
  vars:
    generator: "{{ lookup('password', '/dev/null length=15 chars=ascii_lowercase,ascii_uppercase,digits') }}"
  tasks:
  - name: Get list of users in Windows with wmic
    ansible.windows.win_shell: wmic useraccount list /format:list
    register: users
    tags: windows
  - name: Filter user list for usernames
    ansible.builtin.set_fact:
      usernames: "{{ users.stdout_lines |
        select('match', '^Name=') |
        map('regex_replace', '^Name=(.*)', '\\1') |
        list }}"
    tags: windows
  - name: Remove Ansible, WDAGUtilityAccount, and krbtgt users from the list
    ansible.builtin.set_fact:
      usernames: "{{ usernames |
        reject('search', ansible_user) |
        reject('search', 'WDAGUtilityAccount') |
        reject('search', 'krbtgt') }}"
    tags: windows
  - name: Change random passwords for users
    include_tasks: generate-password-windows.yml
    loop: "{{ usernames }}"
    tags: windows
...